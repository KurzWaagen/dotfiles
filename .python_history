exit()
import django
print(django.get_version())
exit()
import blog
import views
print views.oath
print views.path
print (views.path)
path views
path (views)
import requests
r = requests.get('https://www.google.co.jp/")
r = requests.get("https://www.google.co.jp/")
print(r)
print(r.txt)
print(r.text)
r = requests.get('http://yahoo.com/')
import requests
r = requests.get('http://yahoo.com/')
r.test
r.text
import socket
client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client.connect(("www.google.co.jp",80))
client.send(b"GET /HTTP/1.1\r\nHost: google.com\r\n\r\n")
response = client.recv(4096)
print(response)
import requests
pdp(self):
'http://localhost:8080/authzforce-ce/domains/JD9ho-MoEee02AJCrBEAAg/pap/policies/P1/1.0'
pdp(self):
url = 'http://localhost:8080/authzforce-ce/domains/JD9ho-MoEee02AJCrBEAAg/pap/policies/P1/1.0'
headers = {'Accept': 'application/xml', 'Content-Type': 'application/xml'}
file = open('policies.xml', 'w')
response = requests.get(url, headers=headers)
print(request.text)
print(response.text)
import requests
url = 'http://localhost:8080/authzforce-ce/domains/JD9ho-MoEee02AJCrBEAAg/pap/policies/P1/1.0'
        headers = {'Accept': 'application/xml', 'Content-Type': 'application/xml'}
headers = {'Accept': 'application/xml', 'Content-Type': 'application/xml'}
response = requests.get(url, headers=headers)
s = 'b,GET http://abcde.jp/12345 HTTP/1.1\r\n'
index = s.find('abcde.jp)
index = s.find('abcde.jp')
index
index2 = s.find('HTTP/1.1'
)
index2
print s[index:index2]
print (s[index:index2])
host = abcde.jp
host = 'abcde.jp'
print (s[index+len(host):index2])
True = 1
true
True
print (s[index+len(host)+True:index2])
pap_url = 'http://localhost:8080/authzforce-ce/domains/JD9ho-MoEee02AJCrBEAAg/pap/policies/P1/1.0'
headers = {'Accept': 'application/xml', 'Content-Type': 'application/xml'}
import requests
policyset = requests.get(pap_url, headers=headers)
print(policyset.text)
policies = 'this is sample policy /entry/12345 end'
i = policies.find(
'/entry/12345')
j = policies.find('entry/234')
i
j
if policies.find('/entry/12345') > 0:
print('True')
	print('True')
print('True')
if policies.find('/entry/12345') > 0:
    print('True')
else:
    print('False')
ld = open('userdata.txt')
lines = ld.readlines()
lines
ld.close()
for line in lines:
if line.find('kyoushi@example.ed.jp') >= 0:
	if line.find('kyoushi@example.ed.jp') >= 0:
    if line.find('kyoushi@example.ed.jp') >= 0:
for line in lines:
    if line.find('kyoushi@example.ed.jp') >= 0:
		print line[:-1]
for line in lines:
    if line.find('kyoushi@example.ed.jp') >= 0:
        print line
for line in lines:
    if line.find('kyoushi@example.ed.jp') >= 0:
		print line[:-1]
for line in lines:
    if line.find('kyoushi@example.ed.jp') >= 0:
		print line[:-1]
for line in lines:
    if line.find('kyoushi@example.ed.jp') >= 0:
        print line[:-1}
for line in lines:
    if line.find('kyoushi@example.ed.jp') >= 0:
        print line[:-1]
print(Path(__file__).resolve().parent)
exit
from pathlib import Path
print(Path(__file__).resolve().parent)
from neo4jrestclient.client import GraphDatabase
url = "http://localhost:7474/db/data/"
gdb = GraphDatabase(url)
alice = gdb.nodes.create(name="Alice", age=30)
bob = gdb.nodes.create(name="Bob", age=30)
bob.relationships.create("Knows", alice, since=1980)
alice.relationships.create("Knows", bob, since=1983)
gdb.query("MATCH (n)-[r]-(m) RETURN n, r, m", data_contents=True)
gdb.query("MATCH (n) OPTIONAL MATCH (n)-[r]-() DELETE n,r", data_contents=True)
exit()
